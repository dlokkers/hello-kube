// Code generated by protoc-gen-go. DO NOT EDIT.
// source: article.proto

package protobuf

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetArticle struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetArticle) Reset()         { *m = GetArticle{} }
func (m *GetArticle) String() string { return proto.CompactTextString(m) }
func (*GetArticle) ProtoMessage()    {}
func (*GetArticle) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c593d380f9840a2, []int{0}
}

func (m *GetArticle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetArticle.Unmarshal(m, b)
}
func (m *GetArticle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetArticle.Marshal(b, m, deterministic)
}
func (m *GetArticle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetArticle.Merge(m, src)
}
func (m *GetArticle) XXX_Size() int {
	return xxx_messageInfo_GetArticle.Size(m)
}
func (m *GetArticle) XXX_DiscardUnknown() {
	xxx_messageInfo_GetArticle.DiscardUnknown(m)
}

var xxx_messageInfo_GetArticle proto.InternalMessageInfo

func (m *GetArticle) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ArticleResponse struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content              string   `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArticleResponse) Reset()         { *m = ArticleResponse{} }
func (m *ArticleResponse) String() string { return proto.CompactTextString(m) }
func (*ArticleResponse) ProtoMessage()    {}
func (*ArticleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c593d380f9840a2, []int{1}
}

func (m *ArticleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArticleResponse.Unmarshal(m, b)
}
func (m *ArticleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArticleResponse.Marshal(b, m, deterministic)
}
func (m *ArticleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArticleResponse.Merge(m, src)
}
func (m *ArticleResponse) XXX_Size() int {
	return xxx_messageInfo_ArticleResponse.Size(m)
}
func (m *ArticleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ArticleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ArticleResponse proto.InternalMessageInfo

func (m *ArticleResponse) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ArticleResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ArticleResponse) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func init() {
	proto.RegisterType((*GetArticle)(nil), "protobuf.GetArticle")
	proto.RegisterType((*ArticleResponse)(nil), "protobuf.ArticleResponse")
}

func init() {
	proto.RegisterFile("article.proto", fileDescriptor_5c593d380f9840a2)
}

var fileDescriptor_5c593d380f9840a2 = []byte{
	// 162 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0x2c, 0x2a, 0xc9,
	0x4c, 0xce, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x53, 0x49, 0xa5, 0x69,
	0x4a, 0x32, 0x5c, 0x5c, 0xee, 0xa9, 0x25, 0x8e, 0x10, 0x59, 0x21, 0x3e, 0x2e, 0xa6, 0xcc, 0x14,
	0x09, 0x46, 0x05, 0x46, 0x0d, 0xde, 0x20, 0xa6, 0xcc, 0x14, 0xa5, 0x40, 0x2e, 0x7e, 0xa8, 0x54,
	0x50, 0x6a, 0x71, 0x41, 0x7e, 0x5e, 0x31, 0x86, 0x12, 0x21, 0x11, 0x2e, 0xd6, 0x92, 0xcc, 0x92,
	0x9c, 0x54, 0x09, 0x26, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x08, 0x47, 0x48, 0x82, 0x8b, 0x3d, 0x39,
	0x3f, 0xaf, 0x24, 0x35, 0xaf, 0x44, 0x82, 0x19, 0x2c, 0x0e, 0xe3, 0x1a, 0x05, 0x70, 0xf1, 0x07,
	0xa5, 0x96, 0x14, 0x65, 0xa6, 0x96, 0xa5, 0xc2, 0x6c, 0xb5, 0xe5, 0xe2, 0x80, 0x09, 0x09, 0x89,
	0xe8, 0xc1, 0x9c, 0xa6, 0x87, 0x70, 0x97, 0x94, 0x24, 0x42, 0x14, 0xcd, 0x3d, 0x4a, 0x0c, 0x49,
	0x6c, 0x60, 0x39, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd2, 0x0b, 0x15, 0x4d, 0xe4, 0x00,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RetrieveArticleClient is the client API for RetrieveArticle service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RetrieveArticleClient interface {
	Retrieve(ctx context.Context, in *GetArticle, opts ...grpc.CallOption) (*ArticleResponse, error)
}

type retrieveArticleClient struct {
	cc grpc.ClientConnInterface
}

func NewRetrieveArticleClient(cc grpc.ClientConnInterface) RetrieveArticleClient {
	return &retrieveArticleClient{cc}
}

func (c *retrieveArticleClient) Retrieve(ctx context.Context, in *GetArticle, opts ...grpc.CallOption) (*ArticleResponse, error) {
	out := new(ArticleResponse)
	err := c.cc.Invoke(ctx, "/protobuf.RetrieveArticle/Retrieve", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RetrieveArticleServer is the server API for RetrieveArticle service.
type RetrieveArticleServer interface {
	Retrieve(context.Context, *GetArticle) (*ArticleResponse, error)
}

// UnimplementedRetrieveArticleServer can be embedded to have forward compatible implementations.
type UnimplementedRetrieveArticleServer struct {
}

func (*UnimplementedRetrieveArticleServer) Retrieve(ctx context.Context, req *GetArticle) (*ArticleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Retrieve not implemented")
}

func RegisterRetrieveArticleServer(s *grpc.Server, srv RetrieveArticleServer) {
	s.RegisterService(&_RetrieveArticle_serviceDesc, srv)
}

func _RetrieveArticle_Retrieve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetArticle)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RetrieveArticleServer).Retrieve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RetrieveArticle/Retrieve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RetrieveArticleServer).Retrieve(ctx, req.(*GetArticle))
	}
	return interceptor(ctx, in, info, handler)
}

var _RetrieveArticle_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.RetrieveArticle",
	HandlerType: (*RetrieveArticleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Retrieve",
			Handler:    _RetrieveArticle_Retrieve_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "article.proto",
}
